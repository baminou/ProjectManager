package view;

import javax.swing.JPanel;

import com.jgoodies.forms.layout.FormLayout;
import com.jgoodies.forms.layout.ColumnSpec;
import com.jgoodies.forms.layout.RowSpec;
import com.jgoodies.forms.factories.FormFactory;

import epi.JTextFieldNoSymbol;

import javax.swing.AbstractListModel;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.JTextArea;

import java.awt.Dimension;

import javax.swing.border.EmptyBorder;

import java.awt.Font;
import java.awt.Color;
import java.awt.BorderLayout;
import java.util.Vector;

import javax.swing.JButton;
import javax.swing.border.TitledBorder;
import javax.swing.border.LineBorder;
import javax.swing.SwingConstants;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;

public class GeneralInfoView extends JPanel {
	private final JLabel _titleLbl = new JLabel("Title");
	private final JTextField _titleTxtField = new JTextField();
	private final JLabel _speciesLbl = new JLabel("Species");
	private final JComboBox _speciesComboBox = new JComboBox();
	private final JLabel _descriptionLbl = new JLabel("Description");
	private final JTextField _descriptionTxtField = new JTextField();
	private final JLabel _summaryLbl = new JLabel("Summary");
	private final JTextArea _summaryTextArea = new JTextArea();
	private final JScrollPane _summaryScrollPane = new JScrollPane(_summaryTextArea);
	private final JLabel _overallDesignLbl = new JLabel("Overall Design");
	private final JTextArea _overallDesignTxtArea = new JTextArea();
	private final JScrollPane _overallDesignScrollPane = new JScrollPane(_overallDesignTxtArea);
	private final JLabel _contributorLbl = new JLabel("Contributor");
	private final JTextField _contributorTxtField = new JTextFieldNoSymbol(new Character[]{';'});
	private final JList _experimentList = new JList();
	private final JLabel _experimentLbl = new JLabel("Experiment");
	private final JPanel _creationPanel = new JPanel();
	
	
	private JPanel _panel = new JPanel();

	public GeneralInfoView() {
		setBorder(new LineBorder(new Color(0, 0, 0), 2, true));
		setBackground(new Color(169, 169, 169));
		setLayout(new BorderLayout(0, 0));
		
		_panel.setLayout(new FormLayout(new ColumnSpec[] {
				FormFactory.RELATED_GAP_COLSPEC,
				FormFactory.DEFAULT_COLSPEC,
				FormFactory.RELATED_GAP_COLSPEC,
				ColumnSpec.decode("default:grow"),
				FormFactory.RELATED_GAP_COLSPEC,
				FormFactory.DEFAULT_COLSPEC,},
			new RowSpec[] {
				FormFactory.RELATED_GAP_ROWSPEC,
				FormFactory.DEFAULT_ROWSPEC,
				FormFactory.RELATED_GAP_ROWSPEC,
				FormFactory.DEFAULT_ROWSPEC,
				FormFactory.RELATED_GAP_ROWSPEC,
				FormFactory.DEFAULT_ROWSPEC,
				FormFactory.RELATED_GAP_ROWSPEC,
				RowSpec.decode("max(30dlu;default)"),
				FormFactory.RELATED_GAP_ROWSPEC,
				RowSpec.decode("max(28dlu;default)"),
				FormFactory.RELATED_GAP_ROWSPEC,
				FormFactory.DEFAULT_ROWSPEC,
				FormFactory.RELATED_GAP_ROWSPEC,
				FormFactory.DEFAULT_ROWSPEC,
				FormFactory.RELATED_GAP_ROWSPEC,
				FormFactory.DEFAULT_ROWSPEC,}));
		
		_summaryTextArea.setFont(new Font("Arial", Font.PLAIN, 12));
		_summaryTextArea.setBorder(new EmptyBorder(1, 1, 1, 1));
		_summaryTextArea.setWrapStyleWord(true);
		_summaryTextArea.setLineWrap(true);
		
		_summaryLbl.setFont(new Font("Arial", Font.PLAIN, 12));
		_summaryLbl.setLabelFor(_summaryTextArea);
		_summaryLbl.setForeground(new Color(255,0,0));
		
		_overallDesignTxtArea.setFont(new Font("Arial", Font.PLAIN, 12));
		_overallDesignTxtArea.setBorder(new EmptyBorder(1, 1, 1, 1));
		_overallDesignTxtArea.setWrapStyleWord(true);
		_overallDesignTxtArea.setLineWrap(true);
		_overallDesignLbl.setFont(new Font("Arial", Font.PLAIN, 12));
		
		_contributorTxtField.setFont(new Font("Arial", Font.PLAIN, 12));
		_contributorTxtField.setColumns(10);
		_contributorLbl.setForeground(new Color(255, 0, 0));
		_contributorLbl.setFont(new Font("Arial", Font.PLAIN, 12));
		
		_panel.add(_titleLbl, "2, 2, right, default");
		_panel.add(_titleTxtField, "4, 2, fill, default");
		_panel.add(_speciesLbl, "2, 4, right, default");
		_panel.add(_speciesComboBox, "4, 4, center, default");
		_panel.add(_descriptionLbl, "2, 6, right, default");
		_panel.add(_descriptionTxtField, "4, 6, fill, default");
		_panel.add(_summaryLbl, "2, 8, right, default");
		_panel.add(_summaryScrollPane, "4, 8, fill, fill");
		_panel.add(_overallDesignLbl, "2, 10, right, default");
		_panel.add(_overallDesignScrollPane, "4, 10, fill, fill");
		_panel.add(_contributorLbl, "2, 12, right, default");
		_panel.add(_contributorTxtField, "4, 12, fill, default");
		_panel.add(_experimentLbl, "2, 14, right, default");
		_panel.add(new JScrollPane(_experimentList), "4, 14");
		
		_experimentList.setFont(new Font("Arial", Font.PLAIN, 12));
		_experimentLbl.setFont(new Font("Arial", Font.PLAIN, 12));
		
		_experimentList.setModel(new AbstractListModel() {
			private static final long serialVersionUID = 1386521840249837400L;
			String[] values = new String[] {" ", "Generic Microarray", "Illumina HumanMethylation450 BeadChip (HumanMethylation450_15017482) Platform GPL13534", "Affymetrix GeneChip Human Tiling 2.0R Array Set_Array 1of7 (NCBI Build 36) Platform GPL7222", "Affymetrix GeneChip Human Tiling 2.0R Array Set_Array 2of7 (NCBI Build 36) Platform GPL7223", "Affymetrix GeneChip Human Tiling 2.0R Array Set_Array 3of7 (NCBI Build 36) Platform GPL7224", "Affymetrix GeneChip Human Tiling 2.0R Array Set_Array 4of7 (NCBI Build 36) Platform GPL7225", "Affymetrix GeneChip Human Tiling 2.0R Array Set_Array 5of7 (NCBI Build 36) Platform GPL7226", "Affymetrix GeneChip Human Tiling 2.0R Array Set_Array 6of7 (NCBI Build 36) Platform GPL7227", "Affymetrix GeneChip Human Tiling 2.0R Array Set_Array 7of7 (NCBI Build 36) Platform GPL7228", "[Mm35b_P01R] Affymetrix Mouse Tiling 2.0R Set, Array 1 Platform GPL6444", "[Mm35b_P02R] Affymetrix Mouse Tiling 2.0R Set, Array 2 Platform GPL6445", "[Mm35b_P03R] Affymetrix Mouse Tiling 2.0R Set, Array 3 Platform GPL6446", "[Mm35b_P04R] Affymetrix Mouse Tiling 2.0R Set, Array 4 Platform GPL6447", "[Mm35b_P05R] Affymetrix Mouse Tiling 2.0R Set, Array 5 Platform GPL6448", "[Mm35b_P06R] Affymetrix Mouse Tiling 2.0R Set, Array 6 Platform GPL6449", "[Mm35b_P07R] Affymetrix Mouse Tiling 2.0R Set, Array 7 Platform GPL6450", "Illumina HiSeq 2500 (Mus musculus) Platform GPL17021", "Illumina HiSeq 2500 (Homo sapiens) Platform GPL16791", "RT-PCR"};
			public int getSize() {
				return values.length;
			}
			public Object getElementAt(int index) {
				return values[index];
			}
		});
		_speciesComboBox.setModel(new DefaultComboBoxModel(new String[] {"", "Human", "Mouse"}));
		
		_creationPanel.setLayout(new FormLayout(new ColumnSpec[] {
				ColumnSpec.decode("226px:grow"),},
			new RowSpec[] {
				FormFactory.RELATED_GAP_ROWSPEC,
				RowSpec.decode("29px"),
				FormFactory.RELATED_GAP_ROWSPEC,
				RowSpec.decode("default:grow"),
				FormFactory.RELATED_GAP_ROWSPEC,
				FormFactory.DEFAULT_ROWSPEC,
				FormFactory.RELATED_GAP_ROWSPEC,
				FormFactory.DEFAULT_ROWSPEC,}));
		_creationPanel.add(_selectExistingProjectBtn, "1, 2, fill, top");
		_creationPanel.add(panel, "1, 4, fill, fill");
		
		add(InfoFields.get_instance().get_creationPanel(), BorderLayout.NORTH);
		add(_panel, BorderLayout.CENTER);
		//add(InfoFields.get_instance().get_experimentNameLbl(), BorderLayout.SOUTH);
	}
	
	
	
	public JPanel get_panel() {
		return _panel;
	}



	public void set_panel(JPanel _panel) {
		this._panel = _panel;
	}



	public JLabel get_titleLbl() {
		return _titleLbl;
	}



	public JTextField get_titleTxtField() {
		return _titleTxtField;
	}



	public JLabel get_speciesLbl() {
		return _speciesLbl;
	}



	public JComboBox get_speciesComboBox() {
		return _speciesComboBox;
	}



	public JLabel get_descriptionLbl() {
		return _descriptionLbl;
	}



	public JTextField get_descriptionTxtField() {
		return _descriptionTxtField;
	}



	public JLabel get_summaryLbl() {
		return _summaryLbl;
	}



	public JTextArea get_summaryTextArea() {
		return _summaryTextArea;
	}



	public JScrollPane get_summaryScrollPane() {
		return _summaryScrollPane;
	}



	public JLabel get_overallDesignLbl() {
		return _overallDesignLbl;
	}



	public JTextArea get_overallDesignTxtArea() {
		return _overallDesignTxtArea;
	}



	public JScrollPane get_overallDesignScrollPane() {
		return _overallDesignScrollPane;
	}



	public JLabel get_contributorLbl() {
		return _contributorLbl;
	}



	public JTextField get_contributorTxtField() {
		return _contributorTxtField;
	}



	public JList get_experimentList() {
		return _experimentList;
	}



	public JLabel get_experimentLbl() {
		return _experimentLbl;
	}



	private void _initTips(){
		/*this._titleTxtField.setToolTipText("Provide a unique title that describes the overall study.");
		this._titleLbl.setToolTipText("Provide a unique title that describes the overall study.");
		this._speciesComboBox.setToolTipText("Select the corresponding species for the experiment.");
		this._speciesLbl.setToolTipText("Select the corresponding species for the experiment.");
		this._descriptionTxtField.setToolTipText("Enter 2-3 words describing the content of the folder. Ex: Blood Sample.");
		this._descriptionLbl.setToolTipText("Enter 2-3 words describing the content of the folder. Ex: Blood Sample.");
		this._summaryTextArea.setToolTipText("Provide a thorough description of the goals and objectives of this study. The abstract from the associated publication may be suitable. Multiple summary lines can be included.");
		this._summaryLbl.setToolTipText("Provide a thorough description of the goals and objectives of this study. The abstract from the associated publication may be suitable. Multiple summary lines can be included.");
		this._overallDesignTxtArea.setToolTipText("Provide a description of the experimental design.Indicate how many Samples are analyzed, if replicates are included, are there control and/or reference Samples, dye-swaps, etc... Multiple lines can be included.");
		this._overallDesignLbl.setToolTipText("Provide a description of the experimental design.Indicate how many Samples are analyzed, if replicates are included, are there control and/or reference Samples, dye-swaps, etc... Multiple lines can be included.");
		this._contributorTxtField.setToolTipText("Enter the name of all contributors separated by semicolon. Ex. Spider Man;Super Man;Spongebob SquarePants.");
		this._contributorLbl.setToolTipText("Enter the name of all contributors separated by semicolon. Ex. Spider Man;Super Man;Spongebob SquarePants.");*/
	}
}

package controller;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.Calendar;

import javax.swing.JOptionPane;
import javax.swing.JPanel;

import jxl.read.biff.BiffException;
import jxl.write.WriteException;
import jxl.write.biff.RowsExceededException;

import org.apache.commons.lang3.text.WordUtils;

import app.ConventionException;
import app.Project;
import view.GeneralInfoView;
import view.SpecificProjectView;
import epi.GeneralInfoObserver;

public abstract class SpecificProjectController implements GeneralInfoObserver {
	
	protected SpecificProjectView _view;

	protected void _init(){
		_view.get_generateBtn();
		/*_view.get_generateBtn().addActionListener(new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent e) {
				try {
					send_to_server();
				} catch (RowsExceededException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				} catch (WriteException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				} catch (BiffException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				} catch (ConventionException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				} catch (NotBoundException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
			}
		});*/
	}
	
	//public abstract void generate() throws IOException, RowsExceededException, WriteException, BiffException, NotBoundException, app.ConventionException;

	public JPanel get_view(){ return _view;}
	public abstract void send_to_server() throws ConventionException, RowsExceededException, WriteException, BiffException, IOException, NotBoundException;
	public void disable(){ _view.disable(); }
	public void enable(){ _view.enable(); }
	
	
	
	/*public void create_folder(String folder_name){
		try {
			ServerInterface.getInstance().get_stub().createScratchDirectory(folder_name);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (NotBoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public String get_folder_name(String title, String species, String description, Project project_name, String parent_path){
		Calendar cal = Calendar.getInstance();
		String year = String.valueOf(cal.get(Calendar.YEAR));
		String month = String.format("%02d",cal.get(Calendar.MONTH)+1);
		String day = String.format("%02d",cal.get(Calendar.DAY_OF_MONTH));
		
		String modified_title = WordUtils.capitalizeFully(title).replaceAll("\\s+", "");
		String modified_description = WordUtils.capitalizeFully(description).replaceAll("\\s", "");
		return parent_path+"/"+year+month+day+"_"+project_name.get_title()+"_"+modified_title+"_"+species+"_"+modified_description;
	}*/
}

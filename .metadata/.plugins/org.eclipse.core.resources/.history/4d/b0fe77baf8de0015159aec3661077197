package app;

import java.sql.DriverManager;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import epi.Project;
import epi.SubProject;


public class DBInterface {
	
	private Connection _connection;
	
	public DBInterface(String ip, int port, String dbname, String username, String password) throws SQLException, ClassNotFoundException{
		Class.forName("com.mysql.jdbc.Driver");
		_connection = DriverManager.getConnection("jdbc:mysql://"+ip+":"+port+"/"+dbname,username,password);
	}
	
	/*public Project get_project(int id) throws SQLException{
		Statement statement = null;
		statement = _connection.createStatement();
		String sql = "SELECT * FROM project WHERE id="+id;
		
		ResultSet rs = statement.executeQuery(sql);
		rs.first();
		return new Project(rs.getInt("id"),rs.getString("title"),rs.getInt("year"),rs.getString("creation_date"),rs.getInt("version"));
	}
	
	public Project get_project(String title, int year, int version) throws SQLException{
		Statement statement = null;
		statement = _connection.createStatement();
		String sql = "SELECT * FROM project WHERE title='"+title+"' AND year="+year+" AND version="+version;
		ResultSet rs = statement.executeQuery(sql);
		rs.first();
		return new Project(rs.getInt("id"),rs.getString("title"),rs.getInt("year"),rs.getString("creation_date"),rs.getInt("version"));
	}*/
	
	public void insert_project(String title, int year, int version) throws SQLException{
		Statement statement = null;
		statement = _connection.createStatement();
		String sql = "INSERT INTO project (title, year, version) VALUES ('"+title+"',"+year+","+version+")";
		
		statement.executeUpdate(sql);
	}
	
	/*public Vector<Project> get_all_projects() throws SQLException{
		Vector<Project> vector = new Vector<Project>();
		Statement statement = null;
		statement = _connection.createStatement();
		String sql = "SELECT * FROM project";
		
		ResultSet rs = statement.executeQuery(sql);
		
		while(rs.next()){
			vector.add(new Project(rs.getInt("id"),rs.getString("title"),rs.getInt("year"),rs.getString("creation_date"),rs.getInt("version")));
		}
		return vector;
	}*/
	
	public void insert_subproject(SubProject sub){
		
	}
	
	/*public void insert_microarray_subproject(GenericProject project) throws SQLException{
		Statement statement = null;
		statement = _connection.createStatement();
		String sql = "INSERT INTO microarray (project_id,title,species,description,summary,overall_design,contributor,experiment_type,platform,growth_protocol,treatment_protocol,"
				+ "extract_protocol,label_protocol,hyb_protocol,scan_protocol,data_processing,additional_results,results_file) VALUES ("+project.get_project_id()+",'"+project.get_title()+"',"
						+ "'"+project.get_species()+"','"+project.get_description()+"','"+project.get_summary()+"','"+project.get_overall_design()+"',"
								+ "'"+project.get_contributor()+"','"+project.get_experiment()+"','"+project.get_platform()+"','"+project.get_growth_protocol()+"',"
										+ "'"+project.get_treatment_protocol()+"','"+project.get_extract_protocol()+"','"+project.get_label_protocol()+"',"
												+ "'"+project.get_hyb_protocol()+"','"+project.get_scan_protocol()+"','"+project.get_data_processing()+"',"
														+ "'"+project.get_additional_results()+"','"+project.get_results_file()+"')";
		
		statement.executeUpdate(sql);
	}*/
	
	/*public void insert_illumina_subproject(IlluminaProject project) throws SQLException{
		Statement statement = null;
		statement = _connection.createStatement();
		String sql = "INSERT INTO illumina ("+
				combineStrings(',',false,"project_id","title","species","description","summary","overall_design","contributor","experiment_type","growth_protocol",
						"treatment_protocol","extract_protocol","label_protocol","hyb_protocol","scan_protocol","data_processing","matrix_processed","matrix_signal")
				+") VALUES ("+
				combineStrings(',',true,String.valueOf(project.get_project_id()),project.get_title(),project.get_species(),project.get_description(),project.get_summary(),
						project.get_overall_design(),project.get_contributor(),project.get_experiment(),project.get_growth_protocol(),project.get_treatment_protocol(),
						project.get_extract_protocol(),project.get_label_protocol(),project.get_hyb_protocol(),project.get_scan_protocol(),project.get_data_processing(),
						project.get_matrix_processed(),project.get_matrix_signal())
				+")";
		statement.executeUpdate(sql);
	}*/
	
	/*public void insert_pcr_subproject(PCRProject project) throws SQLException{
		Statement statement = null;
		statement = _connection.createStatement();
		String sql = "INSERT INTO pcr("
				+ combineStrings(',',false,"project_id","title","species","description","summary","overall_design","contributor","experiment_type","platform",
						"growth_protocol","treatment_protocol","extract_protocol","label_protocol","data_processing","value_definition")+") VALUES ("+
				combineStrings(',',true,String.valueOf(project.get_project_id()),project.get_title(),project.get_species(),project.get_description(),project.get_summary(),
						project.get_overall_design(),project.get_contributor(),project.get_experiment(),project.get_platform(),project.get_growth_protocol(),
						project.get_treatment_protocol(),project.get_extract_protocol(),project.get_label_protocol(),project.get_data_processing(),project.get_value_definition())+")";
		statement.executeUpdate(sql);
	}*/
	
	/*public void insert_sequencing_subproject(SequencingProject project) throws SQLException{
		Statement statement = null;
		statement = _connection.createStatement();
		String sql = "INSERT INTO sequencing("+combineStrings(',',false,"project_id","title","species","description","summary","overall_design","contributor","experiment_type",
				"growth_protocol","treatment_protocol","extract_protocol","library_construction","lib_strategy","data_processing","genome_build","processed_data_files")
				+") VALUES ("+combineStrings(',',true,String.valueOf(project.get_project_id()),project.get_title(),project.get_species(),project.get_description(),
						project.get_summary(),project.get_overall_design(),project.get_contributor(),project.get_experiment(),project.get_growth_protocol(),
						project.get_treatment_protocol(),project.get_extract_protocol(),project.get_library_contruction(),project.get_library_strategy(),
						project.get_data_processing(),project.get_genome_build(),project.get_processed_data())+")";
		statement.executeUpdate(sql);
	}*/

	public String combineStrings(char delimiter,boolean quotes,String... strings)
	{
		String tmp = "";
		int cpt = 0;
		for(String word: strings){
			tmp = tmp + (quotes==true ? "'"+word+"'":word);
			if(cpt!=strings.length-1){
				tmp = tmp + delimiter;
			}
			cpt++;
		}
		return tmp;
	}
}

package view;

import java.awt.Color;
import java.awt.Font;

import javax.swing.AbstractListModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.border.EmptyBorder;
import javax.swing.border.TitledBorder;

import com.jgoodies.forms.factories.FormFactory;
import com.jgoodies.forms.layout.ColumnSpec;
import com.jgoodies.forms.layout.FormLayout;
import com.jgoodies.forms.layout.RowSpec;

import epi.JTextFieldNoSymbol;

public class InfoFields {
	
	private static InfoFields instance = null;
	
	public static InfoFields get_instance(){
		if(instance == null){
			instance = new InfoFields();
		}
		return instance;
	}
	
	private InfoFields(){
		_overallDesignTxtArea.setFont(new Font("Arial", Font.PLAIN, 12));
		_overallDesignTxtArea.setBorder(new EmptyBorder(1, 1, 1, 1));
		_overallDesignTxtArea.setWrapStyleWord(true);
		_overallDesignTxtArea.setLineWrap(true);
		_overallDesignLbl.setFont(new Font("Arial", Font.PLAIN, 12));
		
		_summaryTextArea.setFont(new Font("Arial", Font.PLAIN, 12));
		_summaryTextArea.setBorder(new EmptyBorder(1, 1, 1, 1));
		_summaryTextArea.setWrapStyleWord(true);
		_summaryTextArea.setLineWrap(true);
		
		_contributorTxtField.setFont(new Font("Arial", Font.PLAIN, 12));
		_contributorTxtField.setColumns(10);
		_contributorLbl.setForeground(new Color(255, 0, 0));
		_contributorLbl.setFont(new Font("Arial", Font.PLAIN, 12));
		
		_summaryLbl.setFont(new Font("Arial", Font.PLAIN, 12));
		_summaryLbl.setLabelFor(_summaryTextArea);
		_summaryLbl.setForeground(new Color(255,0,0));
		_subProjectPanel.setBorder(new TitledBorder(null, "Folder Creation", TitledBorder.LEADING, TitledBorder.TOP, null, null));
		
		_titleLbl.setForeground(new Color(255, 0, 0));
		_titleLbl.setFont(new Font("Arial", Font.PLAIN, 12));
		_titleLbl.setLabelFor(_titleTxtField);
		
		_titleTxtField.setFont(new Font("Arial", Font.PLAIN, 12));
		_titleTxtField.setColumns(10);
		_speciesLbl.setForeground(new Color(255, 0, 0));
		_speciesLbl.setFont(new Font("Arial", Font.PLAIN, 12));
		_descriptionLbl.setForeground(new Color(255, 0, 0));
		_descriptionLbl.setFont(new Font("Arial", Font.PLAIN, 12));
		
		_descriptionLbl.setLabelFor(_descriptionTxtField);
		_descriptionTxtField.setFont(new Font("Arial", Font.PLAIN, 12));
		_descriptionTxtField.setColumns(10);
		_experimentList.setFont(new Font("Arial", Font.PLAIN, 12));
		_experimentLbl.setFont(new Font("Arial", Font.PLAIN, 12));
		
		_growthProtocolLbl.setFont(new Font("Arial", Font.PLAIN, 12));
		_growthProtocolLbl.setHorizontalAlignment(SwingConstants.RIGHT);
		_growthProtocolTxtArea.setBorder(new EmptyBorder(1, 1, 1, 1));
		_growthProtocolTxtArea.setLineWrap(true);
		_growthProtocolTxtArea.setWrapStyleWord(true);
		_growthProtocolTxtArea.setFont(new Font("Arial", Font.PLAIN, 12));
		
		_treatmentProtocolLbl.setFont(new Font("Arial", Font.PLAIN, 12));
		_treatmentProtocolLbl.setHorizontalAlignment(SwingConstants.RIGHT);
		_treatmentProtocolTxtArea.setBorder(new EmptyBorder(1, 1, 1, 1));
		_treatmentProtocolTxtArea.setWrapStyleWord(true);
		_treatmentProtocolTxtArea.setLineWrap(true);
		_treatmentProtocolTxtArea.setFont(new Font("Arial", Font.PLAIN, 12));
		
		_extractProtocolLbl.setFont(new Font("Arial", Font.PLAIN, 12));
		_extractProtocolLbl.setHorizontalAlignment(SwingConstants.RIGHT);
		_extractProtocolTxtArea.setBorder(new EmptyBorder(1, 1, 1, 1));
		_extractProtocolTxtArea.setLineWrap(true);
		_extractProtocolTxtArea.setWrapStyleWord(true);
		_extractProtocolTxtArea.setFont(new Font("Arial", Font.PLAIN, 12));
		
		_dataProcessingLbl.setFont(new Font("Arial", Font.PLAIN, 12));
		_dataProcessingLbl.setHorizontalAlignment(SwingConstants.RIGHT);
		_dataProcessingTxtArea.setBorder(new EmptyBorder(1, 1, 1, 1));
		_dataProcessingTxtArea.setWrapStyleWord(true);
		_dataProcessingTxtArea.setLineWrap(true);
		_dataProcessingTxtArea.setFont(new Font("Arial", Font.PLAIN, 12));
		
		_experimentList.setModel(new AbstractListModel() {
			private static final long serialVersionUID = 1386521840249837400L;
			String[] values = new String[] {" ", "Generic Microarray", "Illumina HumanMethylation450 BeadChip (HumanMethylation450_15017482) Platform GPL13534", "Affymetrix GeneChip Human Tiling 2.0R Array Set_Array 1of7 (NCBI Build 36) Platform GPL7222", "Affymetrix GeneChip Human Tiling 2.0R Array Set_Array 2of7 (NCBI Build 36) Platform GPL7223", "Affymetrix GeneChip Human Tiling 2.0R Array Set_Array 3of7 (NCBI Build 36) Platform GPL7224", "Affymetrix GeneChip Human Tiling 2.0R Array Set_Array 4of7 (NCBI Build 36) Platform GPL7225", "Affymetrix GeneChip Human Tiling 2.0R Array Set_Array 5of7 (NCBI Build 36) Platform GPL7226", "Affymetrix GeneChip Human Tiling 2.0R Array Set_Array 6of7 (NCBI Build 36) Platform GPL7227", "Affymetrix GeneChip Human Tiling 2.0R Array Set_Array 7of7 (NCBI Build 36) Platform GPL7228", "[Mm35b_P01R] Affymetrix Mouse Tiling 2.0R Set, Array 1 Platform GPL6444", "[Mm35b_P02R] Affymetrix Mouse Tiling 2.0R Set, Array 2 Platform GPL6445", "[Mm35b_P03R] Affymetrix Mouse Tiling 2.0R Set, Array 3 Platform GPL6446", "[Mm35b_P04R] Affymetrix Mouse Tiling 2.0R Set, Array 4 Platform GPL6447", "[Mm35b_P05R] Affymetrix Mouse Tiling 2.0R Set, Array 5 Platform GPL6448", "[Mm35b_P06R] Affymetrix Mouse Tiling 2.0R Set, Array 6 Platform GPL6449", "[Mm35b_P07R] Affymetrix Mouse Tiling 2.0R Set, Array 7 Platform GPL6450", "Illumina HiSeq 2500 (Mus musculus) Platform GPL17021", "Illumina HiSeq 2500 (Homo sapiens) Platform GPL16791", "RT-PCR"};
			public int getSize() {
				return values.length;
			}
			public Object getElementAt(int index) {
				return values[index];
			}
		});
		
		_speciesComboBox.setModel(new DefaultComboBoxModel(new String[] {"", "Human", "Mouse"}));
		
		_subProjectPanel.add(_titleLbl, "2, 2, right, default");
		_subProjectPanel.add(_titleTxtField, "4, 2, fill, default");
		_subProjectPanel.add(_speciesLbl, "2, 4, right, default");
		_subProjectPanel.add(_speciesComboBox, "4, 4, center, default");
		_subProjectPanel.add(_descriptionLbl, "2, 6, right, default");
		_subProjectPanel.add(_descriptionTxtField, "4, 6, fill, default");
		_subProjectPanel.add(_summaryLbl, "2, 8, right, default");
		_subProjectPanel.add(_summaryScrollPane, "4, 8, fill, fill");
		_subProjectPanel.add(_overallDesignLbl, "2, 10, right, default");
		_subProjectPanel.add(_overallDesignScrollPane, "4, 10, fill, fill");
		_subProjectPanel.add(_contributorLbl, "2, 12, right, default");
		_subProjectPanel.add(_contributorTxtField, "4, 12, fill, default");
		_subProjectPanel.add(_experimentLbl, "2, 14, right, default");
		_subProjectPanel.add(new JScrollPane(_experimentList), "4, 14");
		
		_creationPanel.setLayout(new FormLayout(new ColumnSpec[] {
				ColumnSpec.decode("226px:grow"),},
			new RowSpec[] {
				FormFactory.RELATED_GAP_ROWSPEC,
				RowSpec.decode("29px"),
				FormFactory.RELATED_GAP_ROWSPEC,
				RowSpec.decode("default:grow"),
				FormFactory.RELATED_GAP_ROWSPEC,
				FormFactory.DEFAULT_ROWSPEC,
				FormFactory.RELATED_GAP_ROWSPEC,
				FormFactory.DEFAULT_ROWSPEC,}));
		_creationPanel.add(_selectExistingProjectBtn, "1, 2, fill, top");
		_creationPanel.add(panel, "1, 4, fill, fill");
		
		panel.setLayout(new FormLayout(new ColumnSpec[] {
				FormFactory.RELATED_GAP_COLSPEC,
				FormFactory.DEFAULT_COLSPEC,
				FormFactory.RELATED_GAP_COLSPEC,
				FormFactory.DEFAULT_COLSPEC,},
			new RowSpec[] {
				FormFactory.RELATED_GAP_ROWSPEC,
				FormFactory.DEFAULT_ROWSPEC,
				FormFactory.RELATED_GAP_ROWSPEC,
				FormFactory.DEFAULT_ROWSPEC,
				FormFactory.RELATED_GAP_ROWSPEC,
				FormFactory.DEFAULT_ROWSPEC,}));
		panel.add(_projectTitleLbl, "2, 2, right, default");
		
		_projectTitleLbl.setFont(new Font("Arial", Font.PLAIN, 10));
		_projectTitleLbl.setForeground(new Color(30, 144, 255));
		_projectTitle.setForeground(new Color(100, 149, 237));
		_projectTitle.setFont(new Font("Arial", Font.BOLD, 10));
		
		panel.add(_projectTitle, "4, 2");
		_projectYearLbl.setFont(new Font("Arial", Font.PLAIN, 10));
		_projectYearLbl.setForeground(new Color(30, 144, 255));
		panel.add(_projectYearLbl, "2, 4, right, default");
		_projectYear.setForeground(new Color(100, 149, 237));
		_projectYear.setFont(new Font("Arial", Font.BOLD, 10));
		
		panel.add(_projectYear, "4, 4");
		_projectVersionLbl.setFont(new Font("Arial", Font.PLAIN, 10));
		_projectVersionLbl.setForeground(new Color(30, 144, 255));
		panel.add(_projectVersionLbl, "2, 6, right, default");
		_projectVersionLbl.setHorizontalAlignment(SwingConstants.RIGHT);
		_projectVersion.setForeground(new Color(100, 149, 237));
		_projectVersion.setFont(new Font("Arial", Font.BOLD, 10));
		
		panel.add(_projectVersion, "4, 6");
		
		_creationPanel.add(_resetBtn, "1, 6, center, default");
		_msgLabel.setFont(new Font("Arial", Font.PLAIN, 10));
		_msgLabel.setForeground(new Color(255, 0, 0));
		
		_creationPanel.add(_msgLabel, "1, 8, center, default");
		_experimentNameLbl.setBorder(new EmptyBorder(5, 0, 5, 0));
		_experimentNameLbl.setForeground(Color.BLACK);
		_experimentNameLbl.setFont(new Font("Arial", Font.PLAIN, 12));
		_experimentNameLbl.setHorizontalAlignment(SwingConstants.CENTER);
		
		_subProjectPanel.setLayout(new FormLayout(new ColumnSpec[] {
				FormFactory.RELATED_GAP_COLSPEC,
				FormFactory.DEFAULT_COLSPEC,
				FormFactory.RELATED_GAP_COLSPEC,
				ColumnSpec.decode("default:grow"),
				FormFactory.RELATED_GAP_COLSPEC,
				FormFactory.DEFAULT_COLSPEC,},
			new RowSpec[] {
				FormFactory.RELATED_GAP_ROWSPEC,
				FormFactory.DEFAULT_ROWSPEC,
				FormFactory.RELATED_GAP_ROWSPEC,
				FormFactory.DEFAULT_ROWSPEC,
				FormFactory.RELATED_GAP_ROWSPEC,
				FormFactory.DEFAULT_ROWSPEC,
				FormFactory.RELATED_GAP_ROWSPEC,
				RowSpec.decode("max(30dlu;default)"),
				FormFactory.RELATED_GAP_ROWSPEC,
				RowSpec.decode("max(28dlu;default)"),
				FormFactory.RELATED_GAP_ROWSPEC,
				FormFactory.DEFAULT_ROWSPEC,
				FormFactory.RELATED_GAP_ROWSPEC,
				FormFactory.DEFAULT_ROWSPEC,
				FormFactory.RELATED_GAP_ROWSPEC,
				FormFactory.DEFAULT_ROWSPEC,}));
		
		_platformLbl.setForeground(Color.RED);
		_platformLbl.setFont(new Font("Arial", Font.PLAIN, 12));
		_platformLbl.setHorizontalAlignment(SwingConstants.RIGHT);
		
		_platformTxtField.setFont(new Font("Arial", Font.PLAIN, 12));
		_platformTxtField.setColumns(10);
		
		_labelProtocolTxtArea.setBorder(new EmptyBorder(1, 1, 1, 1));
		_labelProtocolTxtArea.setFont(new Font("Arial", Font.PLAIN, 12));
		_valueDefinitionTxtArea.setBorder(new EmptyBorder(1, 1, 1, 1));
		_valueDefinitionTxtArea.setFont(new Font("Arial", Font.PLAIN, 12));
		
		_labelProtocolLbl.setFont(new Font("Arial", Font.PLAIN, 12));
		_labelProtocolLbl.setHorizontalAlignment(SwingConstants.RIGHT);
		_valueDefinitionLbl.setFont(new Font("Arial", Font.PLAIN, 12));
		_valueDefinitionLbl.setHorizontalAlignment(SwingConstants.RIGHT);
		
		_matrixSignalTxtArea.setBorder(new EmptyBorder(1, 1, 1, 1));
		_matrixSignalTxtArea.setWrapStyleWord(true);
		_matrixSignalTxtArea.setLineWrap(true);
		_matrixSignalTxtArea.setFont(new Font("Arial", Font.PLAIN, 12));
		_matrixProcessedTxtArea.setBorder(new EmptyBorder(1, 1, 1, 1));
		_matrixProcessedTxtArea.setWrapStyleWord(true);
		_matrixProcessedTxtArea.setLineWrap(true);
		_matrixProcessedTxtArea.setFont(new Font("Arial", Font.PLAIN, 12));
		
		_matrixProcessedLbl.setFont(new Font("Arial", Font.PLAIN, 12));
		_matrixProcessedLbl.setHorizontalAlignment(SwingConstants.RIGHT);
		_matrixSignalLbl.setFont(new Font("Arial", Font.PLAIN, 12));
		_matrixSignalLbl.setHorizontalAlignment(SwingConstants.RIGHT);
		
		_hybProtocolTxtArea.setBorder(new EmptyBorder(1, 1, 1, 1));
		_hybProtocolTxtArea.setWrapStyleWord(true);
		_hybProtocolTxtArea.setLineWrap(true);
		_hybProtocolTxtArea.setFont(new Font("Arial", Font.PLAIN, 12));
		
		_scanProtocolLbl.setFont(new Font("Arial", Font.PLAIN, 12));
		_scanProtocolLbl.setHorizontalAlignment(SwingConstants.RIGHT);
		
		_scanProtocolTxtArea.setBorder(new EmptyBorder(1, 1, 1, 1));
		_scanProtocolTxtArea.setWrapStyleWord(true);
		_scanProtocolTxtArea.setLineWrap(true);
		_scanProtocolTxtArea.setFont(new Font("Arial", Font.PLAIN, 12));

		_labelProtocolLbl.setFont(new Font("Arial", Font.PLAIN, 12));
		_labelProtocolLbl.setHorizontalAlignment(SwingConstants.RIGHT);
		
		_hybProtocolLbl.setFont(new Font("Arial", Font.PLAIN, 12));
		_hybProtocolLbl.setHorizontalAlignment(SwingConstants.RIGHT);
	}
	
	
	private final JTextFieldNoSymbol _titleTxtField = new JTextFieldNoSymbol();
	private final JTextFieldNoSymbol _descriptionTxtField = new JTextFieldNoSymbol();
	private final JLabel _titleLbl = new JLabel("Title");
	private final JLabel _speciesLbl = new JLabel("Species");
	private final JLabel _descriptionLbl = new JLabel("3-Words description");
	private final JLabel _summaryLbl = new JLabel("Summary");
	private final JTextArea _summaryTextArea = new JTextArea();
	private final JScrollPane _summaryScrollPane = new JScrollPane(_summaryTextArea);
	private final JLabel _overallDesignLbl = new JLabel("Overall Design");
	private final JTextArea _overallDesignTxtArea = new JTextArea();
	private final JScrollPane _overallDesignScrollPane = new JScrollPane(_overallDesignTxtArea);
	private final JLabel _contributorLbl = new JLabel("Contributor");
	private final JTextField _contributorTxtField = new JTextFieldNoSymbol(new Character[]{';'});
	private final JList _experimentList = new JList();
	private final JLabel _experimentLbl = new JLabel("Experiment");
	private final JPanel _subProjectPanel = new JPanel();
	private final JPanel _creationPanel = new JPanel();
	private final JButton _selectExistingProjectBtn = new JButton("Select Existing Project Folder");
	private final JLabel _projectTitleLbl = new JLabel("Project Title:");
	private final JLabel _projectYearLbl = new JLabel("Year:");
	private final JLabel _projectVersionLbl = new JLabel("Version:");
	private final JPanel panel = new JPanel();
	private final JLabel _projectTitle = new JLabel("");
	private final JLabel _projectYear = new JLabel("");
	private final JLabel _projectVersion = new JLabel("");
	private final JButton _resetBtn = new JButton("Reset");
	private final JLabel _msgLabel = new JLabel(" ");
	private final JLabel _experimentNameLbl = new JLabel(" ");
	private final JComboBox _speciesComboBox = new JComboBox();
	protected final JLabel _growthProtocolLbl = new JLabel("Growth Protocol");
	protected final JTextArea _growthProtocolTxtArea = new JTextArea();
	protected final JScrollPane _growthProtocolScrollPane = new JScrollPane(_growthProtocolTxtArea);
	protected final JLabel _treatmentProtocolLbl = new JLabel("Treatment Protocol");
	protected final JTextArea _treatmentProtocolTxtArea = new JTextArea();
	protected final JScrollPane _treatmentProtocolScrollPane = new JScrollPane(_treatmentProtocolTxtArea);
	protected final JLabel _extractProtocolLbl = new JLabel("Extract Protocol");
	protected final JTextArea _extractProtocolTxtArea = new JTextArea();
	protected final JScrollPane _extractProtocolScrollPane = new JScrollPane(_extractProtocolTxtArea);
	protected final JLabel _dataProcessingLbl = new JLabel("Data Processing");
	protected final JTextArea _dataProcessingTxtArea = new JTextArea();
	protected final JScrollPane _dataProcessingScrollPane = new JScrollPane(_dataProcessingTxtArea);
	protected final JButton _generateBtn = new JButton("Generate");
	private final JLabel _platformLbl = new JLabel("Platform");
	private final JTextField _platformTxtField = new JTextField();
	private final JLabel _labelProtocolLbl = new JLabel("Label Protocol");
	private final JTextArea _labelProtocolTxtArea = new JTextArea();
	private final JScrollPane _labelProtocolScrollPane = new JScrollPane(_labelProtocolTxtArea);
	private final JLabel _valueDefinitionLbl = new JLabel("Value Definition");
	private final JTextArea _valueDefinitionTxtArea = new JTextArea();
	private final JScrollPane _valueDefinitionScrollPane = new JScrollPane(_valueDefinitionTxtArea);
	private final JLabel _matrixProcessedLbl = new JLabel("<html>Matrix processed<br/>value definition</html>");
	private final JLabel _matrixSignalLbl = new JLabel("<html># matrix signal<br/>intensities value<br/>definition</html>");
	private final JTextArea _matrixProcessedTxtArea = new JTextArea();
	private final JScrollPane _matrixProcessedScrollPane = new JScrollPane(_matrixProcessedTxtArea);
	private final JTextArea _matrixSignalTxtArea = new JTextArea();
	private final JScrollPane _matrixSignalScrollPane = new JScrollPane(_matrixSignalTxtArea);
	private final JLabel _hybProtocolLbl = new JLabel("Hyb Protocol");
	private final JTextArea _hybProtocolTxtArea = new JTextArea();
	private final JScrollPane _hybProtocolScrollPane = new JScrollPane(_hybProtocolTxtArea);
	private final JLabel _scanProtocolLbl = new JLabel("Scan Protocol");
	private final JTextArea _scanProtocolTxtArea = new JTextArea();
	private final JScrollPane _scanProtocolScrollPane = new JScrollPane(_scanProtocolTxtArea);

	public JLabel get_matrixProcessedLbl() {
		return _matrixProcessedLbl;
	}

	public JLabel get_matrixSignalLbl() {
		return _matrixSignalLbl;
	}

	public JLabel get_hybProtocolLbl() {
		return _hybProtocolLbl;
	}

	public JTextArea get_hybProtocolTxtArea() {
		return _hybProtocolTxtArea;
	}

	public JScrollPane get_hybProtocolScrollPane() {
		return _hybProtocolScrollPane;
	}

	public JLabel get_scanProtocolLbl() {
		return _scanProtocolLbl;
	}

	public JTextArea get_scanProtocolTxtArea() {
		return _scanProtocolTxtArea;
	}

	public JScrollPane get_scanProtocolScrollPane() {
		return _scanProtocolScrollPane;
	}

	public JTextArea get_matrixProcessedTxtArea() {
		return _matrixProcessedTxtArea;
	}

	public JScrollPane get_matrixProcessedScrollPane() {
		return _matrixProcessedScrollPane;
	}

	public JTextArea get_matrixSignalTxtArea() {
		return _matrixSignalTxtArea;
	}

	public JScrollPane get_matrixSignalScrollPane() {
		return _matrixSignalScrollPane;
	}

	public JLabel get_labelProtocolLbl() {
		return _labelProtocolLbl;
	}

	public JTextArea get_labelProtocolTxtArea() {
		return _labelProtocolTxtArea;
	}

	public JScrollPane get_labelProtocolScrollPane() {
		return _labelProtocolScrollPane;
	}

	public JLabel get_valueDefinitionLbl() {
		return _valueDefinitionLbl;
	}

	public JTextArea get_valueDefinitionTxtArea() {
		return _valueDefinitionTxtArea;
	}

	public JScrollPane get_valueDefinitionScrollPane() {
		return _valueDefinitionScrollPane;
	}

	public JLabel get_platformLbl() {
		return _platformLbl;
	}

	public JTextField get_platformTxtField() {
		return _platformTxtField;
	}

	public JTextFieldNoSymbol get_titleTxtField() {
		return _titleTxtField;
	}
	public JTextFieldNoSymbol get_descriptionTxtField() {
		return _descriptionTxtField;
	}
	public JLabel get_titleLbl() {
		return _titleLbl;
	}
	public JLabel get_speciesLbl() {
		return _speciesLbl;
	}
	public JLabel get_descriptionLbl() {
		return _descriptionLbl;
	}
	public JLabel get_summaryLbl() {
		return _summaryLbl;
	}
	public JTextArea get_summaryTextArea() {
		return _summaryTextArea;
	}
	public JScrollPane get_summaryScrollPane() {
		return _summaryScrollPane;
	}
	public JLabel get_overallDesignLbl() {
		return _overallDesignLbl;
	}
	public JTextArea get_overallDesignTxtArea() {
		return _overallDesignTxtArea;
	}
	public JScrollPane get_overallDesignScrollPane() {
		return _overallDesignScrollPane;
	}
	public JLabel get_contributorLbl() {
		return _contributorLbl;
	}
	public JTextField get_contributorTxtField() {
		return _contributorTxtField;
	}
	public JList get_experimentList() {
		return _experimentList;
	}
	public JLabel get_experimentLbl() {
		return _experimentLbl;
	}
	public JPanel get_subProjectPanel() {
		return _subProjectPanel;
	}
	public JPanel get_creationPanel() {
		return _creationPanel;
	}
	public JButton get_selectExistingProjectBtn() {
		return _selectExistingProjectBtn;
	}
	public JLabel get_projectTitleLbl() {
		return _projectTitleLbl;
	}
	public JLabel get_projectYearLbl() {
		return _projectYearLbl;
	}
	public JLabel get_projectVersionLbl() {
		return _projectVersionLbl;
	}
	public JPanel getPanel() {
		return panel;
	}
	public JLabel get_projectTitle() {
		return _projectTitle;
	}
	public JLabel get_projectYear() {
		return _projectYear;
	}
	public JLabel get_projectVersion() {
		return _projectVersion;
	}
	public JButton get_resetBtn() {
		return _resetBtn;
	}
	public JLabel get_msgLabel() {
		return _msgLabel;
	}
	public JLabel get_experimentNameLbl() {
		return _experimentNameLbl;
	}
	public JComboBox get_speciesComboBox() {
		return _speciesComboBox;
	}
	public JLabel get_growthProtocolLbl() {
		return _growthProtocolLbl;
	}
	public JTextArea get_growthProtocolTxtArea() {
		return _growthProtocolTxtArea;
	}
	public JScrollPane get_growthProtocolScrollPane() {
		return _growthProtocolScrollPane;
	}
	public JLabel get_treatmentProtocolLbl() {
		return _treatmentProtocolLbl;
	}
	public JTextArea get_treatmentProtocolTxtArea() {
		return _treatmentProtocolTxtArea;
	}
	public JScrollPane get_treatmentProtocolScrollPane() {
		return _treatmentProtocolScrollPane;
	}
	public JLabel get_extractProtocolLbl() {
		return _extractProtocolLbl;
	}
	public JTextArea get_extractProtocolTxtArea() {
		return _extractProtocolTxtArea;
	}
	public JScrollPane get_extractProtocolScrollPane() {
		return _extractProtocolScrollPane;
	}
	public JLabel get_dataProcessingLbl() {
		return _dataProcessingLbl;
	}
	public JTextArea get_dataProcessingTxtArea() {
		return _dataProcessingTxtArea;
	}
	public JScrollPane get_dataProcessingScrollPane() {
		return _dataProcessingScrollPane;
	}
	public JButton get_generateBtn() {
		return _generateBtn;
	}
}

package app;

import java.io.Serializable;
import java.util.Calendar;
import java.util.Date;

import org.apache.commons.lang3.text.WordUtils;

public abstract class SubProject implements Serializable {
	private int _id;				//ID of the sub-project for database
	private Calendar _creation_date;	//Creation date of the sub-project
	private String _title;			//Title of the experiment
	private String _species;		//Species analyzed in the experiment
	private String _description;	//Description of the experiment
	private Project _project;		//Project related
	private String _summary;		//Summary of the experiment
	private String _overall_design;	//Overall design of the experiment
	private String _contributors;	//Contributors in the experiment
	private String _experiment;		//Type of experiment
	private String _growthProtocol;	//Growth protocol of the experiment
	private String _treatmentProtocol;	//Treatment protocol of the experiment
	private String _extractProtocol;	//Extract protocol of the experiment
	private String _dataProcessing;	//Data processing steps of the experiment
	


	public SubProject(int _id, Date _creation_date, String _title,
			String _species, String _description, Project _project,
			String _summary, String _overall_design, String _contributors,
			String _experiment, String _growthProtocol,
			String _treatmentProtocol, String _extractProtocol,
			String _dataProcessing) throws ConventionException {
		this.set_id(_id);
		this.set_creation_date(_creation_date);
		this.set_title(_title);
		this.set_species(_species);
		this.set_description(_description);
		this.set_project(_project);
		this.set_summary(_summary);
		this.set_overall_design(_overall_design);
		this.set_contributors(_contributors);
		this.set_experiment(_experiment);
		this.set_growthProtocol(_growthProtocol);
		this.set_treatmentProtocol(_treatmentProtocol);
		this.set_extractProtocol(_extractProtocol);
		this.set_dataProcessing(_dataProcessing);
	}

	/**
	 * Return the project related to the experiment
	 * @return	Project related to the experiment
	 */
	public Project get_project() {
		return _project;
	}

	/**
	 * Assign a project to the experiment
	 * @param _project	A project
	 * @throws ConventionException 	The project cannot be null
	 */
	public void set_project(Project _project) throws ConventionException {
		if(_project == null) throw new ConventionException("No project assign to the experiment.");
		this._project = _project;
	}
	
	/**
	 * Return the summary of the experiment
	 * @return	The summary of the experiment
	 */
	public String get_summary() {
		return _summary;
	}
	
	/**
	 * Assign the summary to the experiment
	 * @param _summary	The summary of the experiment
	 */
	public void set_summary(String _summary) {
		this._summary = _summary;
	}
	
	/**
	 * Return the overall design of the experiment
	 * @return	The overall design of the experiment
	 */
	public String get_overall_design() {
		return _overall_design;
	}
	
	/**
	 * Assign an overall design to the experiment
	 * @param _overall_design	An overall design
	 */
	public void set_overall_design(String _overall_design) {
		this._overall_design = _overall_design;
	}
	
	/**
	 * Return the contributors to the experiment
	 * @return	The contributors of the experiment
	 */
	public String get_contributors() {
		return _contributors;
	}
	
	/**
	 * Assign the contributors to the experiment
	 * @param _contributors	The list of contributors
	 * @throws ConventionException 	The contributors cannot be null
	 */
	public void set_contributors(String _contributors) throws ConventionException {
		if(_contributors==null) throw new ConventionException("No contributors added to the experiment.");
		this._contributors = _contributors;
	}
	
	/**
	 * Return the experiment type
	 * @return	The experiment type
	 */
	public String get_experiment() {
		return _experiment;
	}
	
	/**
	 * Assign an experiment type
	 * @param _experiment	The experiment type
	 */
	public void set_experiment(String _experiment) {
		this._experiment = _experiment;
	}
	
	/**
	 * Return the ID of the experiment
	 * @return	The ID of the experiment
	 */
	public int get_id() {
		return _id;
	}
	
	/**
	 * Assign an ID
	 * @param _id	An ID to assign
	 */
	public void set_id(int _id) {
		this._id = _id;
	}
	
	/**
	 * Return the creation date
	 * @return	The creation date of the experiment
	 */
	public Calendar get_creation_date() {
		return _creation_date;
	}
	
	/**
	 * Assign the creation date
	 * @param _creation_date	A creation date
	 */
	public void set_creation_date(Calendar _creation_date) {
		this._creation_date = _creation_date;
	}
	
	/**
	 * Return the title of the experiment
	 * @return	The title of the experiment
	 */
	public String get_title() {
		return _title;
	}
	
	/**
	 * Assign the title of the experiment
	 * @param _title	The title of the experiment
	 * @throws ConventionException The title cannot be null
	 */
	public void set_title(String _title) throws ConventionException {
		if(_title==null) throw new ConventionException("The title is missing.");
		this._title = _title;
	}
	
	/**
	 * Return the species of the experiment
	 * @return	The species of the experiment
	 */
	public String get_species() {
		return _species;
	}
	
	/**
	 * Assign a species to the experiment
	 * @param _species	The species of the experiment
	 */
	public void set_species(String _species) {
		this._species = _species;
	}
	
	/**
	 * Assign a description to the experiment
	 * @return	The description of the experiment
	 */
	public String get_description() {
		return _description;
	}
	
	/**
	 * Assign a description to the experiment
	 * @param _description	The description of the experiment
	 */
	public void set_description(String _description) {
		this._description = _description;
	}

	public String get_growthProtocol() {
		return _growthProtocol;
	}

	public void set_growthProtocol(String _growthProtocol) {
		this._growthProtocol = _growthProtocol;
	}

	public String get_treatmentProtocol() {
		return _treatmentProtocol;
	}

	public void set_treatmentProtocol(String _treatmentProtocol) {
		this._treatmentProtocol = _treatmentProtocol;
	}

	public String get_extractProtocol() {
		return _extractProtocol;
	}

	public void set_extractProtocol(String _extractProtocol) {
		this._extractProtocol = _extractProtocol;
	}

	public String get_dataProcessing() {
		return _dataProcessing;
	}

	public void set_dataProcessing(String _dataProcessing) {
		this._dataProcessing = _dataProcessing;
	}
	
	public void get_folder_name(){
		Calendar cal = this._creation_date;
		String year = String.valueOf(cal.get(Calendar.YEAR));
		String month = String.format("%02d",cal.get(Calendar.MONTH)+1);
		String day = String.format("%02d",cal.get(Calendar.DAY_OF_MONTH));
		
		String modified_title = WordUtils.capitalizeFully(title).replaceAll("\\s+", "");
		String modified_description = WordUtils.capitalizeFully(description).replaceAll("\\s", "");
		return _project.get_folder_name()+"/"+year+month+day+"_"+project_name+"_"+modified_title+"_"+species+"_"+modified_description;
	}
	
}

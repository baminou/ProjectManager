package controller;

import java.io.File;
import java.io.IOException;

import model.GeneralInfoModel;
import model.SequencingModel;
import view.SequencingView;
import jxl.Workbook;
import jxl.read.biff.BiffException;
import jxl.write.Label;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;
import jxl.write.WriteException;
import jxl.write.biff.RowsExceededException;

public class SequencingController extends SpecificProjectController{
	private SequencingView _view;
	private static SequencingController instance = null;
	
	protected SequencingController(){
		_view = SequencingView.getInstance();
		_view.get_generateBtn().addActionListener(new GenerateActionListener());
	}
	
	public static SequencingController getInstance(){
		if(instance == null){
			instance = new SequencingController();
		}
		return instance;
	}
	
	public SequencingView get_view() {
		return _view;
	}
	public void set_view(SequencingView _view) {
		this._view = _view;
	}

	@Override
	public void experimentListChange(int index, String value) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void reset() {
		_view.get_growthProtocolTxtArea().setText(null);
		_view.get_treatmentProtocolTxtArea().setText(null);
		_view.get_extractProtocolTxtArea().setText(null);
		_view.get_dataProcessingTxtArea().setText(null);
		_view.get_genomeBuildTxtArea().setText(null);
		_view.get_libraryConstructionTxtArea().setText(null);
		_view.get_libraryStrategyTxtArea().setText(null);
		_view.get_processedDataTxtArea().setText(null);
	}

	@Override
	public void enable() {
		_view.get_growthProtocolTxtArea().setEnabled(true);
		_view.get_treatmentProtocolTxtArea().setEnabled(true);
		_view.get_extractProtocolTxtArea().setEnabled(true);
		_view.get_dataProcessingTxtArea().setEnabled(true);
		_view.get_genomeBuildTxtArea().setEnabled(true);
		_view.get_libraryConstructionTxtArea().setEnabled(true);
		_view.get_libraryStrategyTxtArea().setEnabled(true);
		_view.get_processedDataTxtArea().setEnabled(true);
	}

	@Override
	public void disable() {
		_view.get_growthProtocolTxtArea().setEnabled(false);
		_view.get_treatmentProtocolTxtArea().setEnabled(false);
		_view.get_extractProtocolTxtArea().setEnabled(false);
		_view.get_dataProcessingTxtArea().setEnabled(false);
		_view.get_genomeBuildTxtArea().setEnabled(false);
		_view.get_libraryConstructionTxtArea().setEnabled(false);
		_view.get_libraryStrategyTxtArea().setEnabled(false);
		_view.get_processedDataTxtArea().setEnabled(false);
	}
	@Override
	public void generate() throws RowsExceededException, WriteException, BiffException, IOException {
		GeneralInfoModel info = GeneralInfoModel.getInstance();
		
		String folder_name = get_folder_name(info.get_title(),info.get_species(),info.get_description(),info.get_project(), info.get_current_absolute_path())+"/";
		create_folder(folder_name);
		
		Workbook template = Workbook.getWorkbook(getClass().getClassLoader().getResourceAsStream("seq_template.xls"));
		WritableWorkbook wbCopy = Workbook.createWorkbook(new File(folder_name+"metadata.xls"),template);
		
		WritableSheet sheet = wbCopy.getSheet("TEMPLATE");

		sheet.addCell(new Label(1,8,info.get_title()));
		sheet.addCell(new Label(1,9,info.get_summary()));
		sheet.addCell(new Label(1,10,info.get_overall_design()));
		sheet.addCell(new Label(1,11,info.get_contributor()));
		
		sheet.addCell(new Label(1,26,_view.get_growthProtocolTxtArea().getText()));
		sheet.addCell(new Label(1,27,_view.get_treatmentProtocolTxtArea().getText()));
		sheet.addCell(new Label(1,28,_view.get_extractProtocolTxtArea().getText()));
		sheet.addCell(new Label(1,29,_view.get_libraryConstructionTxtArea().getText()));
		sheet.addCell(new Label(1,30,_view.get_libraryStrategyTxtArea().getText()));
		sheet.addCell(new Label(1,36,_view.get_dataProcessingTxtArea().getText()));
		sheet.addCell(new Label(1,37,_view.get_genomeBuildTxtArea().getText()));
		sheet.addCell(new Label(1,38,_view.get_processedDataTxtArea().getText()));
		wbCopy.write();
		wbCopy.close();
	}
	
	
}

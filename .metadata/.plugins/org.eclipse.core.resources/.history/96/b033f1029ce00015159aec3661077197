package view;

import javax.swing.JPanel;

import com.jgoodies.forms.layout.FormLayout;
import com.jgoodies.forms.layout.ColumnSpec;
import com.jgoodies.forms.layout.RowSpec;
import com.jgoodies.forms.factories.FormFactory;

import epi.JTextFieldNoSymbol;

import javax.swing.AbstractListModel;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.JTextArea;

import java.awt.Dimension;

import javax.swing.border.EmptyBorder;

import java.awt.Font;
import java.awt.Color;
import java.awt.BorderLayout;
import java.util.Vector;

import javax.swing.JButton;
import javax.swing.border.TitledBorder;
import javax.swing.border.LineBorder;
import javax.swing.SwingConstants;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;

public class GeneralInfoView extends JPanel {
	private static final long serialVersionUID = -4333625935409757870L;
	
	private static GeneralInfoView instance = null;
	
	public static GeneralInfoView getInstance(){
		if(instance == null){
			instance = new GeneralInfoView();
		}
		return instance;
	}
	
	protected GeneralInfoView() {
		setBorder(new LineBorder(new Color(0, 0, 0), 2, true));
		setBackground(new Color(169, 169, 169));
		setMinimumSize(new Dimension(0, 0));
		setMaximumSize(new Dimension(0, 0));
		setLayout(new BorderLayout(0, 0));
		
		
		_subProjectPanel.setLayout(new FormLayout(new ColumnSpec[] {
				FormFactory.RELATED_GAP_COLSPEC,
				FormFactory.DEFAULT_COLSPEC,
				FormFactory.RELATED_GAP_COLSPEC,
				ColumnSpec.decode("default:grow"),
				FormFactory.RELATED_GAP_COLSPEC,
				FormFactory.DEFAULT_COLSPEC,},
			new RowSpec[] {
				FormFactory.RELATED_GAP_ROWSPEC,
				FormFactory.DEFAULT_ROWSPEC,
				FormFactory.RELATED_GAP_ROWSPEC,
				FormFactory.DEFAULT_ROWSPEC,
				FormFactory.RELATED_GAP_ROWSPEC,
				FormFactory.DEFAULT_ROWSPEC,
				FormFactory.RELATED_GAP_ROWSPEC,
				RowSpec.decode("max(30dlu;default)"),
				FormFactory.RELATED_GAP_ROWSPEC,
				RowSpec.decode("max(28dlu;default)"),
				FormFactory.RELATED_GAP_ROWSPEC,
				FormFactory.DEFAULT_ROWSPEC,
				FormFactory.RELATED_GAP_ROWSPEC,
				FormFactory.DEFAULT_ROWSPEC,
				FormFactory.RELATED_GAP_ROWSPEC,
				FormFactory.DEFAULT_ROWSPEC,}));

		add(InfoFields.get_instance().get_subProjectPanel());
		add(InfoFields.get_instance().get_creationPanel(), BorderLayout.NORTH);
		
		add(_experimentNameLbl, BorderLayout.SOUTH);
		_initTips();
	}
	
	private void _initTips(){
		this._titleTxtField.setToolTipText("Provide a unique title that describes the overall study.");
		this._titleLbl.setToolTipText("Provide a unique title that describes the overall study.");
		this._speciesComboBox.setToolTipText("Select the corresponding species for the experiment.");
		this._speciesLbl.setToolTipText("Select the corresponding species for the experiment.");
		this._descriptionTxtField.setToolTipText("Enter 2-3 words describing the content of the folder. Ex: Blood Sample.");
		this._descriptionLbl.setToolTipText("Enter 2-3 words describing the content of the folder. Ex: Blood Sample.");
		this._summaryTextArea.setToolTipText("Provide a thorough description of the goals and objectives of this study. The abstract from the associated publication may be suitable. Multiple summary lines can be included.");
		this._summaryLbl.setToolTipText("Provide a thorough description of the goals and objectives of this study. The abstract from the associated publication may be suitable. Multiple summary lines can be included.");
		this._overallDesignTxtArea.setToolTipText("Provide a description of the experimental design.Indicate how many Samples are analyzed, if replicates are included, are there control and/or reference Samples, dye-swaps, etc... Multiple lines can be included.");
		this._overallDesignLbl.setToolTipText("Provide a description of the experimental design.Indicate how many Samples are analyzed, if replicates are included, are there control and/or reference Samples, dye-swaps, etc... Multiple lines can be included.");
		this._contributorTxtField.setToolTipText("Enter the name of all contributors separated by semicolon. Ex. Spider Man;Super Man;Spongebob SquarePants.");
		this._contributorLbl.setToolTipText("Enter the name of all contributors separated by semicolon. Ex. Spider Man;Super Man;Spongebob SquarePants.");
	}

	public JComboBox get_speciesComboBox() {
		return _speciesComboBox;
	}

	public JLabel get_experimentNameLbl() {
		return _experimentNameLbl;
	}

	public JLabel get_msgLabel() {
		return _msgLabel;
	}

	public JTextField get_titleTxtField() {
		return _titleTxtField;
	}
	
	public JTextField get_descriptionTxtField() {
		return _descriptionTxtField;
	}

	public JLabel get_titleLbl() {
		return _titleLbl;
	}

	public JLabel get_speciesLbl() {
		return _speciesLbl;
	}

	public JLabel get_descriptionLbl() {
		return _descriptionLbl;
	}

	public JLabel get_summaryLbl() {
		return _summaryLbl;
	}

	public JTextArea get_summaryTextArea() {
		return _summaryTextArea;
	}

	public JScrollPane get_summaryScrollPane() {
		return _summaryScrollPane;
	}

	public JLabel get_overallDesignLbl() {
		return _overallDesignLbl;
	}

	public JTextArea get_overallDesignTxtArea() {
		return _overallDesignTxtArea;
	}

	public JScrollPane get_overallDesignScrollPane() {
		return _overallDesignScrollPane;
	}

	public JLabel get_contributorLbl() {
		return _contributorLbl;
	}

	public JTextField get_contributorTxtField() {
		return _contributorTxtField;
	}

	public JList get_experimentList() {
		return _experimentList;
	}

	public JLabel get_experimentLbl() {
		return _experimentLbl;
	}

	public JPanel get_subProjectPanel() {
		return _subProjectPanel;
	}

	public JPanel get_creationPanel() {
		return _creationPanel;
	}

	public JButton get_selectExistingProjectBtn() {
		return _selectExistingProjectBtn;
	}

	public JLabel get_projectTitleLbl() {
		return _projectTitleLbl;
	}

	public JLabel get_yearLbl() {
		return _projectYearLbl;
	}

	public JLabel get_projectYearLbl() {
		return _projectYearLbl;
	}

	public JLabel get_projectVersionLbl() {
		return _projectVersionLbl;
	}

	public JLabel getLblVersion() {
		return _projectVersionLbl;
	}

	public JPanel getPanel() {
		return panel;
	}

	public JLabel get_projectTitle() {
		return _projectTitle;
	}

	public JLabel get_projectYear() {
		return _projectYear;
	}

	public JLabel get_projectVersion() {
		return _projectVersion;
	}

	public JButton get_resetBtn() {
		return _resetBtn;
	}
}

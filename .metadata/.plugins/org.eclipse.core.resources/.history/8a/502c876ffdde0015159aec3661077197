package view;

import java.awt.Font;

import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.SwingConstants;
import javax.swing.border.EmptyBorder;

public abstract class MicroarrayView extends SpecificProjectView {

	protected final JLabel _labelProtocolLbl = new JLabel("Label Protocol");
	protected final JTextArea _labelProtocolTxtArea = new JTextArea();
	protected final JScrollPane _labelProtocolScrollPane = new JScrollPane(_labelProtocolTxtArea);
	protected final JLabel _hybProtocolLbl = new JLabel("Hyb Protocol");
	protected final JTextArea _hybProtocolTxtArea = new JTextArea();
	protected final JScrollPane _hybProtocolScrollPane = new JScrollPane(_hybProtocolTxtArea);
	protected final JLabel _scanProtocolLbl = new JLabel("Scan Protocol");
	protected final JTextArea _scanProtocolTxtArea = new JTextArea();
	protected final JScrollPane _scanProtocolScrollPane = new JScrollPane(_scanProtocolTxtArea);
	
	public MicroarrayView() {
		super();
		_labelProtocolTxtArea.setBorder(new EmptyBorder(1, 1, 1, 1));
		_labelProtocolTxtArea.setWrapStyleWord(true);
		_labelProtocolTxtArea.setLineWrap(true);
		_labelProtocolTxtArea.setFont(new Font("Arial", Font.PLAIN, 12));
		
		_hybProtocolTxtArea.setBorder(new EmptyBorder(1, 1, 1, 1));
		_hybProtocolTxtArea.setWrapStyleWord(true);
		_hybProtocolTxtArea.setLineWrap(true);
		_hybProtocolTxtArea.setFont(new Font("Arial", Font.PLAIN, 12));
		
		_scanProtocolLbl.setFont(new Font("Arial", Font.PLAIN, 12));
		_scanProtocolLbl.setHorizontalAlignment(SwingConstants.RIGHT);
		
		_scanProtocolTxtArea.setBorder(new EmptyBorder(1, 1, 1, 1));
		_scanProtocolTxtArea.setWrapStyleWord(true);
		_scanProtocolTxtArea.setLineWrap(true);
		_scanProtocolTxtArea.setFont(new Font("Arial", Font.PLAIN, 12));

		_labelProtocolLbl.setFont(new Font("Arial", Font.PLAIN, 12));
		_labelProtocolLbl.setHorizontalAlignment(SwingConstants.RIGHT);
		
		_hybProtocolLbl.setFont(new Font("Arial", Font.PLAIN, 12));
		_hybProtocolLbl.setHorizontalAlignment(SwingConstants.RIGHT);
	}

	public JLabel get_labelProtocolLbl() {
		return _labelProtocolLbl;
	}
	public JTextArea get_labelProtocolTxtArea() {
		return _labelProtocolTxtArea;
	}
	public JScrollPane get_labelProtocolScrollPane() {
		return _labelProtocolScrollPane;
	}
	public JLabel get_hybProtocolLbl() {
		return _hybProtocolLbl;
	}
	public JTextArea get_hybProtocolTxtArea() {
		return _hybProtocolTxtArea;
	}
	public JScrollPane get_hybProtocolScrollPane() {
		return _hybProtocolScrollPane;
	}
	public JLabel get_scanProtocolLbl() {
		return _scanProtocolLbl;
	}
	public JTextArea get_scanProtocolTxtArea() {
		return _scanProtocolTxtArea;
	}
	public JScrollPane get_scanProtocolScrollPane() {
		return _scanProtocolScrollPane;
	}

	protected void _initTips() {
		super._initTips();
		this._labelProtocolLbl.setToolTipText("Describe the protocol used to label the extract.");
		this._labelProtocolTxtArea.setToolTipText("Describe the protocol used to label the extract.");
		this._hybProtocolLbl.setToolTipText("Describe the protocols used for hybridization, blocking and washing, and any post-processing steps such as staining.");
		this._hybProtocolTxtArea.setToolTipText("Describe the protocols used for hybridization, blocking and washing, and any post-processing steps such as staining.");
		this._scanProtocolLbl.setToolTipText("Describe the scanning and image acquisition protocols, hardware, and software.");
		this._scanProtocolTxtArea.setToolTipText("Describe the scanning and image acquisition protocols, hardware, and software.");
	}
}

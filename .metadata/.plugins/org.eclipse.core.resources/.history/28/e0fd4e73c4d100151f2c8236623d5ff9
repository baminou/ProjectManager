package app;

import java.io.DataInputStream;
import java.io.File;
import java.io.IOException;
import java.io.PrintStream;
import java.net.InetAddress;
import java.net.Socket;
import java.net.UnknownHostException;
import java.rmi.NotBoundException;
import java.sql.SQLException;
import java.util.Calendar;

import org.apache.commons.lang3.text.WordUtils;

import view.ServerView;
import controller.CreateProjectController;
import controller.GenericController;
import controller.IlluminaController;
import controller.PCRController;
import controller.SequencingController;
import controller.ServerController;
import controller.SyncController;
import epi.SubProject;
import jxl.Workbook;
import jxl.read.biff.BiffException;
import jxl.write.Label;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;
import jxl.write.WriteException;
import jxl.write.biff.RowsExceededException;

public class Model {
	
	private DBInterface _db;
	private ServerController _serverController;
	private SyncController _syncController;

	public Model(){
		
		_serverController = new ServerController();
		try {
			_syncController = new SyncController();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (NotBoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public void create_new_project(){
		new CreateProjectController().init();
	}
	
	public void edit_server_status(){
		_serverController.show();
	}
	
	public DBInterface get_db() {
		return _db;
	}
	
	public void set_db(DBInterface _db) {
		this._db = _db;
	}

	public String get_folder_name(String title, String species, String description, String project_name, String parent_path){
		Calendar cal = Calendar.getInstance();
		String year = String.valueOf(cal.get(Calendar.YEAR));
		String month = String.format("%02d",cal.get(Calendar.MONTH)+1);
		String day = String.format("%02d",cal.get(Calendar.DAY_OF_MONTH));
		
		String modified_title = WordUtils.capitalizeFully(title).replaceAll("\\s+", "");
		String modified_description = WordUtils.capitalizeFully(description).replaceAll("\\s", "");
		return parent_path+"/"+year+month+day+"_"+project_name+"_"+modified_title+"_"+species+"_"+modified_description;
	}
	
	public boolean sub_folder_exists(String title, String species, String description, String project_name, String parent_path){
		return folder_exists(get_folder_name(title,species,description,project_name,parent_path));
	}
	
	public boolean folder_exists(String path){
		return new File(path).exists();
	}

	public ServerController get_serverController() {
		return _serverController;
	}

	public void set_serverController(ServerController _serverController) {
		this._serverController = _serverController;
	}

	public void sync_files() throws IOException, NotBoundException {
		_syncController.show();
	}
}

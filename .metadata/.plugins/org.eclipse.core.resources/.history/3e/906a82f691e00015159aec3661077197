package controller;

import java.io.IOException;
import java.rmi.NotBoundException;
import epi.ServerInterface;
import model.GeneralInfoModel;
import view.SequencingView;
import jxl.read.biff.BiffException;
import jxl.write.WriteException;
import jxl.write.biff.RowsExceededException;

public class SequencingController extends SpecificProjectController{
	private SequencingView _view;
	private static SequencingController instance = null;
	
	protected SequencingController(){
		_view = SequencingView.getInstance();
		_view.get_generateBtn().addActionListener(new GenerateActionListener());
	}
	
	public static SequencingController getInstance(){
		if(instance == null){
			instance = new SequencingController();
		}
		return instance;
	}
	
	public SequencingView get_view() {
		return _view;
	}
	public void set_view(SequencingView _view) {
		this._view = _view;
	}

	@Override
	public void experimentListChange(int index, String value) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void reset() {
		_view.get_growthProtocolTxtArea().setText(null);
		_view.get_treatmentProtocolTxtArea().setText(null);
		_view.get_extractProtocolTxtArea().setText(null);
		_view.get_dataProcessingTxtArea().setText(null);
		_view.get_genomeBuildTxtArea().setText(null);
		_view.get_libraryConstructionTxtArea().setText(null);
		_view.get_libraryStrategyTxtArea().setText(null);
		_view.get_processedDataTxtArea().setText(null);
	}

	@Override
	public void enable() {
		_view.get_growthProtocolTxtArea().setEnabled(true);
		_view.get_treatmentProtocolTxtArea().setEnabled(true);
		_view.get_extractProtocolTxtArea().setEnabled(true);
		_view.get_dataProcessingTxtArea().setEnabled(true);
		_view.get_genomeBuildTxtArea().setEnabled(true);
		_view.get_libraryConstructionTxtArea().setEnabled(true);
		_view.get_libraryStrategyTxtArea().setEnabled(true);
		_view.get_processedDataTxtArea().setEnabled(true);
	}

	@Override
	public void disable() {
		_view.get_growthProtocolTxtArea().setEnabled(false);
		_view.get_treatmentProtocolTxtArea().setEnabled(false);
		_view.get_extractProtocolTxtArea().setEnabled(false);
		_view.get_dataProcessingTxtArea().setEnabled(false);
		_view.get_genomeBuildTxtArea().setEnabled(false);
		_view.get_libraryConstructionTxtArea().setEnabled(false);
		_view.get_libraryStrategyTxtArea().setEnabled(false);
		_view.get_processedDataTxtArea().setEnabled(false);
	}
	@Override
	public void generate() throws RowsExceededException, WriteException, BiffException, IOException, NotBoundException {
		/*GeneralInfoModel info = GeneralInfoModel.getInstance();
		ServerInterface.getInstance().get_stub().createSequencingDirectory(_view.get_speciesComboBox().getSelectedItem().toString(), 
				_view.get_descriptionTxtField().getText(), 
				info.get_project().get_title(), info.get_project().get_original_folder(),info.get_title(), 
				info.get_summary(), info.get_overall_design(), info.get_contributor(), _view.get_growthProtocolTxtArea().getText(),
				_view.get_treatmentProtocolTxtArea().getText(), _view.get_extractProtocolTxtArea().getText(), 
				_view.get_dataProcessingTxtArea().getText(), _view.get_genomeBuildTxtArea().getText(), 
				_view.get_libraryConstructionTxtArea().getText(), _view.get_libraryStrategyTxtArea().getText(),
				_view.get_processedDataTxtArea().getText());*/
	}
	
	
}

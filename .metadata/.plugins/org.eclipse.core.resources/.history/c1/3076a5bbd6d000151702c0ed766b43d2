package controller;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.Calendar;

import javax.swing.JOptionPane;

import jxl.read.biff.BiffException;
import jxl.write.WriteException;
import jxl.write.biff.RowsExceededException;
import model.SpecificProjectModel;

import org.apache.commons.lang3.text.WordUtils;

import view.SpecificProjectView;
import conv.ConventionException;
import epi.GeneralInfoObserver;
import epi.Project;
import epi.ServerInterface;

public abstract class SpecificProjectController implements GeneralInfoObserver {
	
	public SpecificProjectController(){
		GeneralInfoController.getInstance().get_observers().add(this);
	}
	
	public class GenerateActionListener implements ActionListener{
		@Override
		public void actionPerformed(ActionEvent arg0) {
			GeneralInfoController.getInstance().save();
			try {
				generate();
				GeneralInfoController.getInstance().reset();
			} catch (ConventionException e) {
				JOptionPane.showMessageDialog(null, e.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (RowsExceededException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (WriteException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (BiffException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (NotBoundException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}
	
	public abstract void generate() throws ConventionException, IOException, RowsExceededException, WriteException, BiffException, NotBoundException;


	public abstract SpecificProjectModel get_model();

	public abstract SpecificProjectView get_view();
	
	public abstract void reset();
	
	public void create_folder(String folder_name){
		try {
			ServerInterface.getInstance().get_stub().createScratchDirectory(folder_name);
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (NotBoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	public String get_folder_name(String title, String species, String description, Project project_name, String parent_path){
		Calendar cal = Calendar.getInstance();
		String year = String.valueOf(cal.get(Calendar.YEAR));
		String month = String.format("%02d",cal.get(Calendar.MONTH)+1);
		String day = String.format("%02d",cal.get(Calendar.DAY_OF_MONTH));
		
		String modified_title = WordUtils.capitalizeFully(title).replaceAll("\\s+", "");
		String modified_description = WordUtils.capitalizeFully(description).replaceAll("\\s", "");
		return parent_path+"/"+year+month+day+"_"+project_name.get_title()+"_"+modified_title+"_"+species+"_"+modified_description;
	}
}

package epi;

import java.util.Calendar;
import java.util.Date;

import org.apache.commons.lang3.text.WordUtils;

import app.Convention;
import app.ProjectConventionException;
import conv.ConventionException;

public class Project {
	private int		_id;				//ID of the project for database
	private String 	_title;				//Title of the project
	private int		_year;				//Creation year of the project
	private int		_version;			//Version number of the project
	private Date 	_creation_date;		//Creation data for database purposes
	private String	_original_folder;	//The name of the original folder
	private String	_creatorName;		//Name of the creator
	private String 	_creatorEmail;		//Email of the creator
	
	public Project(String folder_name) throws ProjectConventionException{
		if(Convention.project_validation(folder_name)){
			_title = Convention.get_project_title(folder_name);
			_year = Integer.valueOf(Convention.get_project_year(folder_name));
			_version = Integer.valueOf(Convention.get_project_version(folder_name));
			_original_folder = folder_name;
			_creation_date = Calendar.getInstance().getTime();
			if(_version<1) throw new ProjectConventionException("Version cannot be below 1.");
		}else{
			throw new ProjectConventionException("Invalid folder name. "+folder_name);
		}
	}
	
	public Project(int id, String _title, int _year, int _version, Date _creation_date, String creator_name, String creator_email) throws ProjectConventionException {
		if(_title.isEmpty()) throw new ProjectConventionException("Project name cannot be empty.");
		if(_version<1) throw new ProjectConventionException("Version cannot be below 1.");
		
		this._id = id;
		this._title = _title;
		this._year = _year;
		this._version = _version;
		this._creation_date = _creation_date;
		this._creatorName = creator_name;
		this._creatorEmail = creator_email;
	}
	
	/**
	 * Return the original folder's name
	 * @return The name of the original folder.
	 */
	public String get_original_folder() {
		return _original_folder;
	}

	
	public void set_original_folder(String _original_folder) {
		this._original_folder = _original_folder;
	}

	public String get_title() {
		return _title;
	}
	public void set_title(String _title) {
		this._title = _title;
	}
	public int get_year() {
		return _year;
	}
	public void set_year(int _year) {
		this._year = _year;
	}
	public int get_version() {
		return _version;
	}
	public void set_version(int _version) {
		this._version = _version;
	}

	public Date get_creation_date() {
		return _creation_date;
	}

	public void set_creation_date(Date _creation_date) {
		this._creation_date = _creation_date;
	}

	public int get_id() {
		return _id;
	}

	public void set_id(int _id) {
		this._id = _id;
	}
	public String get_folder_name(){
		return WordUtils.capitalizeFully(_title.replaceAll("\\s+", "")+"_"+_year+"_"+String.format("%03d",_version));
	}
	
	public static void main(String args[]){
		try {
			Project project = new Project("Allo_2016_001");
		} catch (ProjectConventionException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
}

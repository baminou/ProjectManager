package app;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.MutableTreeNode;

public class Tree<File> {
	
	private Node<T> root;
	
	public Tree(T rootData){
		root = new Node<T>();
		root.data = rootData;
		root.children = new ArrayList<Node<T>>();
	}
	
	public Node<T> getRoot() {
		return root;
	}



	public void setRoot(Node<T> root) {
		this.root = root;
	}

   private static MutableTreeNode scan(File node)
   {
	   DefaultMutableTreeNode ret = new DefaultMutableTreeNode(node.getName());
	   for(File child : node.listFiles()){
		   if(child.isDirectory() && !child.isHidden()){
			   DefaultMutableTreeNode projectRet = new DefaultMutableTreeNode(child.getName());
			   ret.add(projectRet);
			   for(File grand_child : child.listFiles()){
				   if(grand_child.isDirectory()&&!grand_child.isHidden()){
					   projectRet.add(new DefaultMutableTreeNode(grand_child.getName()));
				   }
			   }
		   }
	   }
	   return ret;
   }
	
	
	public static class Node<T> {
		private T data;
		private Node<T> parent;
		private List<Node<T>> children;
		
		public T getData() {
			return data;
		}
		public void setData(T data) {
			this.data = data;
		}
		public Node<T> getParent() {
			return parent;
		}
		public void setParent(Node<T> parent) {
			this.parent = parent;
		}
		public List<Node<T>> getChildren() {
			return children;
		}
		public void setChildren(List<Node<T>> children) {
			this.children = children;
		}
		
		
	}

}
